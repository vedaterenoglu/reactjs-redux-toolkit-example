
--COMMIT 

SCAN GIT LOGS FROM LATEST LOGIN UP TO NOW AND CRETATE A CMMIT MESAGE

Git Commit Message Generator
OBJECTIVE
Generate professional commit messages from staged changes following conventional commit format.
COMMIT FORMAT
<type>(<scope>): <subject>

<body>

<footer>
TYPES

feat: New feature
fix: Bug fix
docs: Documentation
refactor: Code restructuring
perf: Performance improvement
test: Testing
build: Build system
style: Formatting

MANDATORY CONSTRAINTS

✅ Use imperative mood ("Add" not "Added")
✅ Keep subject line under 50 characters
✅ Explain WHAT and WHY, not HOW
✅ Group related changes logically
✅ Include file paths for major changes
❌ NEVER use past tense
❌ NEVER exceed character limits
❌ NEVER include implementation details
❌ NEVER mix unrelated changes

VERIFICATION:

 Subject starts with capital letter
 No period at subject end
 Body wrapped at 72 characters
 Breaking changes clearly marked

🚫 FORBIDDEN

✅ Analyze STAGED changes only IMPORTANT!!!!!!!!!!
✅ Use technical terminology
✅ Maintain professional tone
❌ NEVER execute git commands
❌ NEVER use promotional language
❌ NEVER make assumptions
❌ NEVER add explanatory text

VERIFICATION:

 No command execution
 No marketing speak
 No guesswork about code
 Message only, no commentary

✅ SUCCESS CRITERIA

✅ Identify primary change type
✅ Determine appropriate scope
✅ List all significant modifications
✅ Note breaking changes first
✅ Reference related issues
❌ NEVER omit critical changes
❌ NEVER misrepresent impact
❌ NEVER ignore dependencies

VERIFICATION:

 All changes categorized
 Primary change clear
 Breaking changes highlighted
 Issue numbers included

OUTPUT
Provide formatted commit message only. DO NOT EXECUTE ANY GIT COMMAND stop!!!!




